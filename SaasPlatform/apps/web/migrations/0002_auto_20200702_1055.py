# Generated by Django 3.0.8 on 2020-07-02 02:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('web', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeployServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '待发布'), (2, '发布中'), (3, '成功'), (4, '失败')], default=1, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='DeployTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(max_length=64, verbose_name='描述')),
                ('uid', models.CharField(help_text='任务ID格式为：项目-版本-时间，例如 cmdb-v1-201911012359.zip', max_length=64, verbose_name='任务ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '待发布'), (2, '发布中'), (3, '成功'), (4, '失败')], default=1, verbose_name='状态')),
                ('tag', models.CharField(blank=True, max_length=32, null=True, verbose_name='版本')),
                ('branch', models.CharField(blank=True, max_length=32, null=True, verbose_name='分支')),
                ('commit', models.CharField(blank=True, max_length=40, null=True, verbose_name='提交记录')),
                ('deploy_type', models.PositiveSmallIntegerField(choices=[(1, '全量主机发布'), (2, '自定义主机发布')], default=1, verbose_name='发布类型')),
                ('before_download_script', models.TextField(blank=True, null=True, verbose_name='下载前脚本')),
                ('after_download_script', models.TextField(blank=True, null=True, verbose_name='下载后脚本')),
                ('before_deploy_script', models.TextField(blank=True, null=True, verbose_name='发布前脚本')),
                ('after_deploy_script', models.TextField(blank=True, null=True, verbose_name='发布后脚本')),
            ],
        ),
        migrations.CreateModel(
            name='HookScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('hook_type', models.IntegerField(choices=[(2, '下载前'), (4, '下载后'), (7, '发布前'), (9, '发布后')], verbose_name='钩子类型')),
                ('script', models.TextField(verbose_name='脚本内容')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='项目名')),
                ('repo', models.CharField(max_length=128, verbose_name='git仓库地址')),
            ],
        ),
        migrations.CreateModel(
            name='Rsa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, '启用'), (2, '停用')], verbose_name='状态')),
                ('user', models.CharField(default='root', max_length=32, verbose_name='用户')),
                ('private_key', models.TextField(verbose_name='私钥')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=32, verbose_name='主机名')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectEnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('env', models.CharField(choices=[('test', '测试'), ('prod', '正式')], max_length=32, verbose_name='环境')),
                ('path', models.CharField(max_length=128, verbose_name='线上部署路径')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Project', verbose_name='项目')),
                ('servers', models.ManyToManyField(to='web.Server', verbose_name='服务器')),
            ],
        ),
        migrations.CreateModel(
            name='Diagram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=32, verbose_name='文本')),
                ('status', models.CharField(choices=[('gray', '待执行'), ('green', '成功'), ('red', '失败')], default='gray', max_length=32, verbose_name='状态')),
                ('log', models.TextField(blank=True, null=True, verbose_name='日志')),
                ('deploy_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.DeployServer', verbose_name='服务器发布记录')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Diagram', verbose_name='父节点')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.DeployTask', verbose_name='发布任务')),
            ],
        ),
        migrations.AddField(
            model_name='deploytask',
            name='env',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.ProjectEnv', verbose_name='环境'),
        ),
        migrations.AddField(
            model_name='deployserver',
            name='deploy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.DeployTask', verbose_name='发布任务'),
        ),
        migrations.AddField(
            model_name='deployserver',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Server', verbose_name='服务器'),
        ),
    ]
